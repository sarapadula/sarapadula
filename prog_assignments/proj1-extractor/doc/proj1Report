First I declared a function "parser" passing in char* S. In this function I initialize a string "filename" that is representative of "output.txt". Then, I opened the file using
file_out.open and allowed it to appended using "app". Then I initialized an integar value n and set it equal to the string length of S. I also initialized two integar variables
"start" and "end" at 0. Then, in order to parse through the HTML file of the website I am extracting information from I created three for loops and a while loop. Since the text
that is seen on webpages is written inbetween ">" and "<" in HTML, I created a for loop wherein i = 0; i<n; i++. Within the for loop there is an if statement wherein, if S at
character "i" is equal to ">" then 1 will be added to start. Thus, start will be equivalent to the number of the character where the text on the webpage I am trying to extract
from will start. Then, I created a while loop wherein while S[start] is equal to " " then 1 will be added to start. This, theoretically, should remove any unnecessary spaces from
the beginning of the text I am trying to extract. Then, I created another for loop where int i = start; i<n; i++. Within the for loop there is an if statement where if S[i] is
equal to "<" then the integar end will be equal to i - 1. Thus, since text written in HTML ends with a "<" then this will set the integer value of end equal to the position of the
character where the text ends in the line. Finally, in order to write the text from the website to the output.txt file I created another for loop where int j = start; j <= end;
j++. Within the for loop S[j] will be written to the file output.txt. Then, after the for loop I included file_out << "\t" so that the file will be tab deliminated. Then in int
main(), I initialized the string line, and initialized the input file "fullPage.txt", which is the HTML code from district 122. Then, in order for the user to decide which
district they want information from, I initialized the int variable district and displayed to the user "Enter the number of the the SC district you would like information about."
Then I allowed for input from the user, which would be saved into the variable district. Then I created an if statement wherein, if the user wrote 122 then the input file from
district 122 would be parsed, but if not the user would be shown "This program only contains information about district 122 sorry :(." Then, within the if statement I have another
if statement that ensures the remaining program will only be run if the file is actually open to avoid any errors. Then within that if statment I created a while loop, wherein we
will stay in the while loop until all of the fullPage.txt file is read. Within the while loop I created a character array. Then I created a for loop that would populate the array
with all of the characters in one line of the text. Then I passed the array into parser(), which will extract only the informational text I need for the chatbot. Then I deleted 
the array and closed the file to avoid any errors. After running the program, it nearly works perfectly, but for some reason there are many unnecesary spaces in between all the 
infromational text we need for this assignment. Otherwise, it successfully extracts all the necessary information from the webpage.

